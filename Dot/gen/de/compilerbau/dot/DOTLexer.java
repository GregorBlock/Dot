// Generated from C:\Users\Gregor Block\Studium\git\Dot\Dot\src/de/compilerbau/dot/DOT.g4 by ANTLR 4.1
    
package de.compilerbau.dot;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DOTLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__6=1, T__5=2, T__4=3, T__3=4, T__2=5, T__1=6, T__0=7, INC=8, DEC=9, 
		OR=10, AND=11, EQ=12, NEQ=13, GT=14, LT=15, GTEQ=16, LTEQ=17, PLUS=18, 
		MINUS=19, MULT=20, DIV=21, MOD=22, POW=23, NOT=24, SCOL=25, ASSIGN=26, 
		OPAR=27, CPAR=28, OBRACE=29, CBRACE=30, TRUE=31, FALSE=32, IF=33, ELSE=34, 
		WHILE=35, FOR=36, INTTYPE=37, FlOATTYPE=38, STRINGTYPE=39, STRICT=40, 
		GRAPH=41, DIGRAPH=42, NODE=43, EDGE=44, SUBGRAPH=45, UNCOVER=46, ONLY=47, 
		IDENTIFIER=48, INT=49, FLOAT=50, NUMBER=51, STRING=52, COMMENT=53, LINE_COMMENT=54, 
		WS=55;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'[]'", "'->'", "']'", "'to'", "','", "'['", "':'", "INC", "'--'", "'||'", 
		"'&&'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'^'", "'!'", "';'", "'='", "'('", "')'", "'{'", "'}'", 
		"'true'", "'false'", "'if'", "'else'", "'while'", "'for'", "'int'", "'float'", 
		"'String'", "STRICT", "GRAPH", "DIGRAPH", "NODE", "EDGE", "SUBGRAPH", 
		"UNCOVER", "ONLY", "IDENTIFIER", "INT", "FLOAT", "NUMBER", "STRING", "COMMENT", 
		"LINE_COMMENT", "WS"
	};
	public static final String[] ruleNames = {
		"T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "INC", "DEC", 
		"OR", "AND", "EQ", "NEQ", "GT", "LT", "GTEQ", "LTEQ", "PLUS", "MINUS", 
		"MULT", "DIV", "MOD", "POW", "NOT", "SCOL", "ASSIGN", "OPAR", "CPAR", 
		"OBRACE", "CBRACE", "TRUE", "FALSE", "IF", "ELSE", "WHILE", "FOR", "INTTYPE", 
		"FlOATTYPE", "STRINGTYPE", "STRICT", "GRAPH", "DIGRAPH", "NODE", "EDGE", 
		"SUBGRAPH", "UNCOVER", "ONLY", "IDENTIFIER", "INT", "FLOAT", "NUMBER", 
		"DIGIT", "STRING", "LETTER", "COMMENT", "LINE_COMMENT", "WS"
	};


	public DOTLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DOT.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 54: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 55: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 56: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: _channel = HIDDEN;  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: _channel = HIDDEN;  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\29\u0195\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n"+
		"\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3"+
		"\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3"+
		"\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3"+
		"\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\""+
		"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3"+
		".\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3"+
		"\61\3\61\7\61\u0122\n\61\f\61\16\61\u0125\13\61\3\62\5\62\u0128\n\62\3"+
		"\62\6\62\u012b\n\62\r\62\16\62\u012c\3\63\5\63\u0130\n\63\3\63\6\63\u0133"+
		"\n\63\r\63\16\63\u0134\3\63\3\63\7\63\u0139\n\63\f\63\16\63\u013c\13\63"+
		"\3\63\5\63\u013f\n\63\3\63\3\63\6\63\u0143\n\63\r\63\16\63\u0144\5\63"+
		"\u0147\n\63\3\64\5\64\u014a\n\64\3\64\3\64\6\64\u014e\n\64\r\64\16\64"+
		"\u014f\3\64\6\64\u0153\n\64\r\64\16\64\u0154\3\64\3\64\7\64\u0159\n\64"+
		"\f\64\16\64\u015c\13\64\5\64\u015e\n\64\5\64\u0160\n\64\3\65\3\65\3\66"+
		"\3\66\3\66\3\66\7\66\u0168\n\66\f\66\16\66\u016b\13\66\3\66\3\66\3\67"+
		"\3\67\38\38\38\38\78\u0175\n8\f8\168\u0178\138\38\38\38\38\38\39\39\3"+
		"9\39\79\u0183\n9\f9\169\u0186\139\39\59\u0189\n9\39\39\39\39\3:\6:\u0190"+
		"\n:\r:\16:\u0191\3:\3:\5\u0169\u0176\u0184;\3\3\1\5\4\1\7\5\1\t\6\1\13"+
		"\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1"+
		"\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33"+
		"\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O"+
		")\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65\1i\2\1k"+
		"\66\1m\2\1o\67\2q8\3s9\4\3\2\31\4\2UUuu\4\2VVvv\4\2TTtt\4\2KKkk\4\2EE"+
		"ee\4\2IIii\4\2CCcc\4\2RRrr\4\2JJjj\4\2FFff\4\2PPpp\4\2QQqq\4\2GGgg\4\2"+
		"WWww\4\2DDdd\4\2XXxx\4\2NNnn\4\2[[{{\5\2C\\aac|\6\2\62;C\\aac|\3\2\62"+
		";\6\2C\\aac|\u0082\u0101\5\2\13\f\17\17\"\"\u01a7\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3"+
		"\2\2\2\2g\3\2\2\2\2k\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2"+
		"\2\5x\3\2\2\2\7{\3\2\2\2\t}\3\2\2\2\13\u0080\3\2\2\2\r\u0082\3\2\2\2\17"+
		"\u0084\3\2\2\2\21\u0086\3\2\2\2\23\u0089\3\2\2\2\25\u008c\3\2\2\2\27\u008f"+
		"\3\2\2\2\31\u0092\3\2\2\2\33\u0095\3\2\2\2\35\u0098\3\2\2\2\37\u009a\3"+
		"\2\2\2!\u009c\3\2\2\2#\u009f\3\2\2\2%\u00a2\3\2\2\2\'\u00a4\3\2\2\2)\u00a6"+
		"\3\2\2\2+\u00a8\3\2\2\2-\u00aa\3\2\2\2/\u00ac\3\2\2\2\61\u00ae\3\2\2\2"+
		"\63\u00b0\3\2\2\2\65\u00b2\3\2\2\2\67\u00b4\3\2\2\29\u00b6\3\2\2\2;\u00b8"+
		"\3\2\2\2=\u00ba\3\2\2\2?\u00bc\3\2\2\2A\u00c1\3\2\2\2C\u00c7\3\2\2\2E"+
		"\u00ca\3\2\2\2G\u00cf\3\2\2\2I\u00d5\3\2\2\2K\u00d9\3\2\2\2M\u00dd\3\2"+
		"\2\2O\u00e3\3\2\2\2Q\u00ea\3\2\2\2S\u00f1\3\2\2\2U\u00f7\3\2\2\2W\u00ff"+
		"\3\2\2\2Y\u0104\3\2\2\2[\u0109\3\2\2\2]\u0112\3\2\2\2_\u011a\3\2\2\2a"+
		"\u011f\3\2\2\2c\u0127\3\2\2\2e\u0146\3\2\2\2g\u0149\3\2\2\2i\u0161\3\2"+
		"\2\2k\u0163\3\2\2\2m\u016e\3\2\2\2o\u0170\3\2\2\2q\u017e\3\2\2\2s\u018f"+
		"\3\2\2\2uv\7]\2\2vw\7_\2\2w\4\3\2\2\2xy\7/\2\2yz\7@\2\2z\6\3\2\2\2{|\7"+
		"_\2\2|\b\3\2\2\2}~\7v\2\2~\177\7q\2\2\177\n\3\2\2\2\u0080\u0081\7.\2\2"+
		"\u0081\f\3\2\2\2\u0082\u0083\7]\2\2\u0083\16\3\2\2\2\u0084\u0085\7<\2"+
		"\2\u0085\20\3\2\2\2\u0086\u0087\7-\2\2\u0087\u0088\7-\2\2\u0088\22\3\2"+
		"\2\2\u0089\u008a\7/\2\2\u008a\u008b\7/\2\2\u008b\24\3\2\2\2\u008c\u008d"+
		"\7~\2\2\u008d\u008e\7~\2\2\u008e\26\3\2\2\2\u008f\u0090\7(\2\2\u0090\u0091"+
		"\7(\2\2\u0091\30\3\2\2\2\u0092\u0093\7?\2\2\u0093\u0094\7?\2\2\u0094\32"+
		"\3\2\2\2\u0095\u0096\7#\2\2\u0096\u0097\7?\2\2\u0097\34\3\2\2\2\u0098"+
		"\u0099\7@\2\2\u0099\36\3\2\2\2\u009a\u009b\7>\2\2\u009b \3\2\2\2\u009c"+
		"\u009d\7@\2\2\u009d\u009e\7?\2\2\u009e\"\3\2\2\2\u009f\u00a0\7>\2\2\u00a0"+
		"\u00a1\7?\2\2\u00a1$\3\2\2\2\u00a2\u00a3\7-\2\2\u00a3&\3\2\2\2\u00a4\u00a5"+
		"\7/\2\2\u00a5(\3\2\2\2\u00a6\u00a7\7,\2\2\u00a7*\3\2\2\2\u00a8\u00a9\7"+
		"\61\2\2\u00a9,\3\2\2\2\u00aa\u00ab\7\'\2\2\u00ab.\3\2\2\2\u00ac\u00ad"+
		"\7`\2\2\u00ad\60\3\2\2\2\u00ae\u00af\7#\2\2\u00af\62\3\2\2\2\u00b0\u00b1"+
		"\7=\2\2\u00b1\64\3\2\2\2\u00b2\u00b3\7?\2\2\u00b3\66\3\2\2\2\u00b4\u00b5"+
		"\7*\2\2\u00b58\3\2\2\2\u00b6\u00b7\7+\2\2\u00b7:\3\2\2\2\u00b8\u00b9\7"+
		"}\2\2\u00b9<\3\2\2\2\u00ba\u00bb\7\177\2\2\u00bb>\3\2\2\2\u00bc\u00bd"+
		"\7v\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7w\2\2\u00bf\u00c0\7g\2\2\u00c0"+
		"@\3\2\2\2\u00c1\u00c2\7h\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4\7n\2\2\u00c4"+
		"\u00c5\7u\2\2\u00c5\u00c6\7g\2\2\u00c6B\3\2\2\2\u00c7\u00c8\7k\2\2\u00c8"+
		"\u00c9\7h\2\2\u00c9D\3\2\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc\7n\2\2\u00cc"+
		"\u00cd\7u\2\2\u00cd\u00ce\7g\2\2\u00ceF\3\2\2\2\u00cf\u00d0\7y\2\2\u00d0"+
		"\u00d1\7j\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4\7g\2\2"+
		"\u00d4H\3\2\2\2\u00d5\u00d6\7h\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7t\2"+
		"\2\u00d8J\3\2\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7"+
		"v\2\2\u00dcL\3\2\2\2\u00dd\u00de\7h\2\2\u00de\u00df\7n\2\2\u00df\u00e0"+
		"\7q\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2\7v\2\2\u00e2N\3\2\2\2\u00e3\u00e4"+
		"\7U\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7\7k\2\2\u00e7"+
		"\u00e8\7p\2\2\u00e8\u00e9\7i\2\2\u00e9P\3\2\2\2\u00ea\u00eb\t\2\2\2\u00eb"+
		"\u00ec\t\3\2\2\u00ec\u00ed\t\4\2\2\u00ed\u00ee\t\5\2\2\u00ee\u00ef\t\6"+
		"\2\2\u00ef\u00f0\t\3\2\2\u00f0R\3\2\2\2\u00f1\u00f2\t\7\2\2\u00f2\u00f3"+
		"\t\4\2\2\u00f3\u00f4\t\b\2\2\u00f4\u00f5\t\t\2\2\u00f5\u00f6\t\n\2\2\u00f6"+
		"T\3\2\2\2\u00f7\u00f8\t\13\2\2\u00f8\u00f9\t\5\2\2\u00f9\u00fa\t\7\2\2"+
		"\u00fa\u00fb\t\4\2\2\u00fb\u00fc\t\b\2\2\u00fc\u00fd\t\t\2\2\u00fd\u00fe"+
		"\t\n\2\2\u00feV\3\2\2\2\u00ff\u0100\t\f\2\2\u0100\u0101\t\r\2\2\u0101"+
		"\u0102\t\13\2\2\u0102\u0103\t\16\2\2\u0103X\3\2\2\2\u0104\u0105\t\16\2"+
		"\2\u0105\u0106\t\13\2\2\u0106\u0107\t\7\2\2\u0107\u0108\t\16\2\2\u0108"+
		"Z\3\2\2\2\u0109\u010a\t\2\2\2\u010a\u010b\t\17\2\2\u010b\u010c\t\20\2"+
		"\2\u010c\u010d\t\7\2\2\u010d\u010e\t\4\2\2\u010e\u010f\t\b\2\2\u010f\u0110"+
		"\t\t\2\2\u0110\u0111\t\n\2\2\u0111\\\3\2\2\2\u0112\u0113\t\17\2\2\u0113"+
		"\u0114\t\f\2\2\u0114\u0115\t\6\2\2\u0115\u0116\t\r\2\2\u0116\u0117\t\21"+
		"\2\2\u0117\u0118\t\16\2\2\u0118\u0119\t\4\2\2\u0119^\3\2\2\2\u011a\u011b"+
		"\t\r\2\2\u011b\u011c\t\f\2\2\u011c\u011d\t\22\2\2\u011d\u011e\t\23\2\2"+
		"\u011e`\3\2\2\2\u011f\u0123\t\24\2\2\u0120\u0122\t\25\2\2\u0121\u0120"+
		"\3\2\2\2\u0122\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124"+
		"b\3\2\2\2\u0125\u0123\3\2\2\2\u0126\u0128\5\'\24\2\u0127\u0126\3\2\2\2"+
		"\u0127\u0128\3\2\2\2\u0128\u012a\3\2\2\2\u0129\u012b\5i\65\2\u012a\u0129"+
		"\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d"+
		"d\3\2\2\2\u012e\u0130\5\'\24\2\u012f\u012e\3\2\2\2\u012f\u0130\3\2\2\2"+
		"\u0130\u0132\3\2\2\2\u0131\u0133\5i\65\2\u0132\u0131\3\2\2\2\u0133\u0134"+
		"\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0136\3\2\2\2\u0136"+
		"\u013a\7\60\2\2\u0137\u0139\5i\65\2\u0138\u0137\3\2\2\2\u0139\u013c\3"+
		"\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u0147\3\2\2\2\u013c"+
		"\u013a\3\2\2\2\u013d\u013f\5\'\24\2\u013e\u013d\3\2\2\2\u013e\u013f\3"+
		"\2\2\2\u013f\u0140\3\2\2\2\u0140\u0142\7\60\2\2\u0141\u0143\5i\65\2\u0142"+
		"\u0141\3\2\2\2\u0143\u0144\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2"+
		"\2\2\u0145\u0147\3\2\2\2\u0146\u012f\3\2\2\2\u0146\u013e\3\2\2\2\u0147"+
		"f\3\2\2\2\u0148\u014a\7/\2\2\u0149\u0148\3\2\2\2\u0149\u014a\3\2\2\2\u014a"+
		"\u015f\3\2\2\2\u014b\u014d\7\60\2\2\u014c\u014e\5i\65\2\u014d\u014c\3"+
		"\2\2\2\u014e\u014f\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150"+
		"\u0160\3\2\2\2\u0151\u0153\5i\65\2\u0152\u0151\3\2\2\2\u0153\u0154\3\2"+
		"\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u015d\3\2\2\2\u0156"+
		"\u015a\7\60\2\2\u0157\u0159\5i\65\2\u0158\u0157\3\2\2\2\u0159\u015c\3"+
		"\2\2\2\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015e\3\2\2\2\u015c"+
		"\u015a\3\2\2\2\u015d\u0156\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u0160\3\2"+
		"\2\2\u015f\u014b\3\2\2\2\u015f\u0152\3\2\2\2\u0160h\3\2\2\2\u0161\u0162"+
		"\t\26\2\2\u0162j\3\2\2\2\u0163\u0169\7$\2\2\u0164\u0165\7^\2\2\u0165\u0168"+
		"\7$\2\2\u0166\u0168\13\2\2\2\u0167\u0164\3\2\2\2\u0167\u0166\3\2\2\2\u0168"+
		"\u016b\3\2\2\2\u0169\u016a\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016c\3\2"+
		"\2\2\u016b\u0169\3\2\2\2\u016c\u016d\7$\2\2\u016dl\3\2\2\2\u016e\u016f"+
		"\t\27\2\2\u016fn\3\2\2\2\u0170\u0171\7\61\2\2\u0171\u0172\7,\2\2\u0172"+
		"\u0176\3\2\2\2\u0173\u0175\13\2\2\2\u0174\u0173\3\2\2\2\u0175\u0178\3"+
		"\2\2\2\u0176\u0177\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u0179\3\2\2\2\u0178"+
		"\u0176\3\2\2\2\u0179\u017a\7,\2\2\u017a\u017b\7\61\2\2\u017b\u017c\3\2"+
		"\2\2\u017c\u017d\b8\2\2\u017dp\3\2\2\2\u017e\u017f\7\61\2\2\u017f\u0180"+
		"\7\61\2\2\u0180\u0184\3\2\2\2\u0181\u0183\13\2\2\2\u0182\u0181\3\2\2\2"+
		"\u0183\u0186\3\2\2\2\u0184\u0185\3\2\2\2\u0184\u0182\3\2\2\2\u0185\u0188"+
		"\3\2\2\2\u0186\u0184\3\2\2\2\u0187\u0189\7\17\2\2\u0188\u0187\3\2\2\2"+
		"\u0188\u0189\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018b\7\f\2\2\u018b\u018c"+
		"\3\2\2\2\u018c\u018d\b9\3\2\u018dr\3\2\2\2\u018e\u0190\t\30\2\2\u018f"+
		"\u018e\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u018f\3\2\2\2\u0191\u0192\3\2"+
		"\2\2\u0192\u0193\3\2\2\2\u0193\u0194\b:\4\2\u0194t\3\2\2\2\30\2\u0123"+
		"\u0127\u012c\u012f\u0134\u013a\u013e\u0144\u0146\u0149\u014f\u0154\u015a"+
		"\u015d\u015f\u0167\u0169\u0176\u0184\u0188\u0191";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}