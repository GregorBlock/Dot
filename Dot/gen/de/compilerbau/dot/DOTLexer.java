// Generated from C:\Users\Gregor Block\Studium\git\Dot\Dot\src/de/compilerbau/dot/DOT.g4 by ANTLR 4.1
    
package de.compilerbau.dot;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DOTLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__5=1, T__4=2, T__3=3, T__2=4, T__1=5, T__0=6, INC=7, DEC=8, OR=9, AND=10, 
		EQ=11, NEQ=12, GT=13, LT=14, GTEQ=15, LTEQ=16, PLUS=17, MINUS=18, MULT=19, 
		DIV=20, MOD=21, POW=22, NOT=23, SCOL=24, KOMMA=25, ASSIGN=26, OPAR=27, 
		CPAR=28, OBRACE=29, CBRACE=30, TRUE=31, FALSE=32, IF=33, ELSE=34, WHILE=35, 
		FOR=36, INTTYPE=37, DOUBLETYPE=38, STRINGTYPE=39, STRICT=40, GRAPH=41, 
		DIGRAPH=42, NODE=43, EDGE=44, SUBGRAPH=45, UNCOVER=46, MERGE=47, PRINT=48, 
		IDENTIFIER=49, INT=50, DOUBLE=51, NUMBER=52, STRING=53, COMMENT=54, LINE_COMMENT=55, 
		WS=56;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'[]'", "'->'", "']'", "'to'", "'['", "':'", "INC", "'--'", "'||'", "'&&'", 
		"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'", 
		"'%'", "'^'", "'!'", "';'", "','", "'='", "'('", "')'", "'{'", "'}'", 
		"'true'", "'false'", "'if'", "'else'", "'while'", "'for'", "'int'", "'double'", 
		"'String'", "STRICT", "GRAPH", "DIGRAPH", "NODE", "EDGE", "SUBGRAPH", 
		"UNCOVER", "MERGE", "PRINT", "IDENTIFIER", "INT", "DOUBLE", "NUMBER", 
		"STRING", "COMMENT", "LINE_COMMENT", "WS"
	};
	public static final String[] ruleNames = {
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "INC", "DEC", "OR", "AND", 
		"EQ", "NEQ", "GT", "LT", "GTEQ", "LTEQ", "PLUS", "MINUS", "MULT", "DIV", 
		"MOD", "POW", "NOT", "SCOL", "KOMMA", "ASSIGN", "OPAR", "CPAR", "OBRACE", 
		"CBRACE", "TRUE", "FALSE", "IF", "ELSE", "WHILE", "FOR", "INTTYPE", "DOUBLETYPE", 
		"STRINGTYPE", "STRICT", "GRAPH", "DIGRAPH", "NODE", "EDGE", "SUBGRAPH", 
		"UNCOVER", "MERGE", "PRINT", "IDENTIFIER", "INT", "DOUBLE", "NUMBER", 
		"DIGIT", "STRING", "LETTER", "COMMENT", "LINE_COMMENT", "WS"
	};


	public DOTLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DOT.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 55: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 56: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 57: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: _channel = HIDDEN;  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: _channel = HIDDEN;  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2:\u019f\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3\2"+
		"\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3"+
		"\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3"+
		"\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3"+
		"\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\""+
		"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'"+
		"\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*"+
		"\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-"+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\7\62\u012c\n\62\f\62"+
		"\16\62\u012f\13\62\3\63\5\63\u0132\n\63\3\63\6\63\u0135\n\63\r\63\16\63"+
		"\u0136\3\64\5\64\u013a\n\64\3\64\6\64\u013d\n\64\r\64\16\64\u013e\3\64"+
		"\3\64\7\64\u0143\n\64\f\64\16\64\u0146\13\64\3\64\5\64\u0149\n\64\3\64"+
		"\3\64\6\64\u014d\n\64\r\64\16\64\u014e\5\64\u0151\n\64\3\65\5\65\u0154"+
		"\n\65\3\65\3\65\6\65\u0158\n\65\r\65\16\65\u0159\3\65\6\65\u015d\n\65"+
		"\r\65\16\65\u015e\3\65\3\65\7\65\u0163\n\65\f\65\16\65\u0166\13\65\5\65"+
		"\u0168\n\65\5\65\u016a\n\65\3\66\3\66\3\67\3\67\3\67\3\67\7\67\u0172\n"+
		"\67\f\67\16\67\u0175\13\67\3\67\3\67\38\38\39\39\39\39\79\u017f\n9\f9"+
		"\169\u0182\139\39\39\39\39\39\3:\3:\3:\3:\7:\u018d\n:\f:\16:\u0190\13"+
		":\3:\5:\u0193\n:\3:\3:\3:\3:\3;\6;\u019a\n;\r;\16;\u019b\3;\3;\5\u0173"+
		"\u0180\u018e<\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13"+
		"\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25"+
		"\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1"+
		"= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60"+
		"\1_\61\1a\62\1c\63\1e\64\1g\65\1i\66\1k\2\1m\67\1o\2\1q8\2s9\3u:\4\3\2"+
		"\30\4\2UUuu\4\2VVvv\4\2TTtt\4\2KKkk\4\2EEee\4\2IIii\4\2CCcc\4\2RRrr\4"+
		"\2JJjj\4\2FFff\4\2PPpp\4\2QQqq\4\2GGgg\4\2WWww\4\2DDdd\4\2XXxx\4\2OOo"+
		"o\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\6\2C\\aac|\u0082\u0101\5\2\13\f\17"+
		"\17\"\"\u01b1\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2"+
		"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2"+
		"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2"+
		"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2"+
		"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2"+
		"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3"+
		"\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2m\3\2\2"+
		"\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2\2\2\5z\3\2\2\2\7}\3\2\2\2\t"+
		"\177\3\2\2\2\13\u0082\3\2\2\2\r\u0084\3\2\2\2\17\u0086\3\2\2\2\21\u0089"+
		"\3\2\2\2\23\u008c\3\2\2\2\25\u008f\3\2\2\2\27\u0092\3\2\2\2\31\u0095\3"+
		"\2\2\2\33\u0098\3\2\2\2\35\u009a\3\2\2\2\37\u009c\3\2\2\2!\u009f\3\2\2"+
		"\2#\u00a2\3\2\2\2%\u00a4\3\2\2\2\'\u00a6\3\2\2\2)\u00a8\3\2\2\2+\u00aa"+
		"\3\2\2\2-\u00ac\3\2\2\2/\u00ae\3\2\2\2\61\u00b0\3\2\2\2\63\u00b2\3\2\2"+
		"\2\65\u00b4\3\2\2\2\67\u00b6\3\2\2\29\u00b8\3\2\2\2;\u00ba\3\2\2\2=\u00bc"+
		"\3\2\2\2?\u00be\3\2\2\2A\u00c3\3\2\2\2C\u00c9\3\2\2\2E\u00cc\3\2\2\2G"+
		"\u00d1\3\2\2\2I\u00d7\3\2\2\2K\u00db\3\2\2\2M\u00df\3\2\2\2O\u00e6\3\2"+
		"\2\2Q\u00ed\3\2\2\2S\u00f4\3\2\2\2U\u00fa\3\2\2\2W\u0102\3\2\2\2Y\u0107"+
		"\3\2\2\2[\u010c\3\2\2\2]\u0115\3\2\2\2_\u011d\3\2\2\2a\u0123\3\2\2\2c"+
		"\u0129\3\2\2\2e\u0131\3\2\2\2g\u0150\3\2\2\2i\u0153\3\2\2\2k\u016b\3\2"+
		"\2\2m\u016d\3\2\2\2o\u0178\3\2\2\2q\u017a\3\2\2\2s\u0188\3\2\2\2u\u0199"+
		"\3\2\2\2wx\7]\2\2xy\7_\2\2y\4\3\2\2\2z{\7/\2\2{|\7@\2\2|\6\3\2\2\2}~\7"+
		"_\2\2~\b\3\2\2\2\177\u0080\7v\2\2\u0080\u0081\7q\2\2\u0081\n\3\2\2\2\u0082"+
		"\u0083\7]\2\2\u0083\f\3\2\2\2\u0084\u0085\7<\2\2\u0085\16\3\2\2\2\u0086"+
		"\u0087\7-\2\2\u0087\u0088\7-\2\2\u0088\20\3\2\2\2\u0089\u008a\7/\2\2\u008a"+
		"\u008b\7/\2\2\u008b\22\3\2\2\2\u008c\u008d\7~\2\2\u008d\u008e\7~\2\2\u008e"+
		"\24\3\2\2\2\u008f\u0090\7(\2\2\u0090\u0091\7(\2\2\u0091\26\3\2\2\2\u0092"+
		"\u0093\7?\2\2\u0093\u0094\7?\2\2\u0094\30\3\2\2\2\u0095\u0096\7#\2\2\u0096"+
		"\u0097\7?\2\2\u0097\32\3\2\2\2\u0098\u0099\7@\2\2\u0099\34\3\2\2\2\u009a"+
		"\u009b\7>\2\2\u009b\36\3\2\2\2\u009c\u009d\7@\2\2\u009d\u009e\7?\2\2\u009e"+
		" \3\2\2\2\u009f\u00a0\7>\2\2\u00a0\u00a1\7?\2\2\u00a1\"\3\2\2\2\u00a2"+
		"\u00a3\7-\2\2\u00a3$\3\2\2\2\u00a4\u00a5\7/\2\2\u00a5&\3\2\2\2\u00a6\u00a7"+
		"\7,\2\2\u00a7(\3\2\2\2\u00a8\u00a9\7\61\2\2\u00a9*\3\2\2\2\u00aa\u00ab"+
		"\7\'\2\2\u00ab,\3\2\2\2\u00ac\u00ad\7`\2\2\u00ad.\3\2\2\2\u00ae\u00af"+
		"\7#\2\2\u00af\60\3\2\2\2\u00b0\u00b1\7=\2\2\u00b1\62\3\2\2\2\u00b2\u00b3"+
		"\7.\2\2\u00b3\64\3\2\2\2\u00b4\u00b5\7?\2\2\u00b5\66\3\2\2\2\u00b6\u00b7"+
		"\7*\2\2\u00b78\3\2\2\2\u00b8\u00b9\7+\2\2\u00b9:\3\2\2\2\u00ba\u00bb\7"+
		"}\2\2\u00bb<\3\2\2\2\u00bc\u00bd\7\177\2\2\u00bd>\3\2\2\2\u00be\u00bf"+
		"\7v\2\2\u00bf\u00c0\7t\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2\7g\2\2\u00c2"+
		"@\3\2\2\2\u00c3\u00c4\7h\2\2\u00c4\u00c5\7c\2\2\u00c5\u00c6\7n\2\2\u00c6"+
		"\u00c7\7u\2\2\u00c7\u00c8\7g\2\2\u00c8B\3\2\2\2\u00c9\u00ca\7k\2\2\u00ca"+
		"\u00cb\7h\2\2\u00cbD\3\2\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce\7n\2\2\u00ce"+
		"\u00cf\7u\2\2\u00cf\u00d0\7g\2\2\u00d0F\3\2\2\2\u00d1\u00d2\7y\2\2\u00d2"+
		"\u00d3\7j\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6\7g\2\2"+
		"\u00d6H\3\2\2\2\u00d7\u00d8\7h\2\2\u00d8\u00d9\7q\2\2\u00d9\u00da\7t\2"+
		"\2\u00daJ\3\2\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7"+
		"v\2\2\u00deL\3\2\2\2\u00df\u00e0\7f\2\2\u00e0\u00e1\7q\2\2\u00e1\u00e2"+
		"\7w\2\2\u00e2\u00e3\7d\2\2\u00e3\u00e4\7n\2\2\u00e4\u00e5\7g\2\2\u00e5"+
		"N\3\2\2\2\u00e6\u00e7\7U\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7t\2\2\u00e9"+
		"\u00ea\7k\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec\7i\2\2\u00ecP\3\2\2\2\u00ed"+
		"\u00ee\t\2\2\2\u00ee\u00ef\t\3\2\2\u00ef\u00f0\t\4\2\2\u00f0\u00f1\t\5"+
		"\2\2\u00f1\u00f2\t\6\2\2\u00f2\u00f3\t\3\2\2\u00f3R\3\2\2\2\u00f4\u00f5"+
		"\t\7\2\2\u00f5\u00f6\t\4\2\2\u00f6\u00f7\t\b\2\2\u00f7\u00f8\t\t\2\2\u00f8"+
		"\u00f9\t\n\2\2\u00f9T\3\2\2\2\u00fa\u00fb\t\13\2\2\u00fb\u00fc\t\5\2\2"+
		"\u00fc\u00fd\t\7\2\2\u00fd\u00fe\t\4\2\2\u00fe\u00ff\t\b\2\2\u00ff\u0100"+
		"\t\t\2\2\u0100\u0101\t\n\2\2\u0101V\3\2\2\2\u0102\u0103\t\f\2\2\u0103"+
		"\u0104\t\r\2\2\u0104\u0105\t\13\2\2\u0105\u0106\t\16\2\2\u0106X\3\2\2"+
		"\2\u0107\u0108\t\16\2\2\u0108\u0109\t\13\2\2\u0109\u010a\t\7\2\2\u010a"+
		"\u010b\t\16\2\2\u010bZ\3\2\2\2\u010c\u010d\t\2\2\2\u010d\u010e\t\17\2"+
		"\2\u010e\u010f\t\20\2\2\u010f\u0110\t\7\2\2\u0110\u0111\t\4\2\2\u0111"+
		"\u0112\t\b\2\2\u0112\u0113\t\t\2\2\u0113\u0114\t\n\2\2\u0114\\\3\2\2\2"+
		"\u0115\u0116\t\17\2\2\u0116\u0117\t\f\2\2\u0117\u0118\t\6\2\2\u0118\u0119"+
		"\t\r\2\2\u0119\u011a\t\21\2\2\u011a\u011b\t\16\2\2\u011b\u011c\t\4\2\2"+
		"\u011c^\3\2\2\2\u011d\u011e\t\22\2\2\u011e\u011f\t\16\2\2\u011f\u0120"+
		"\t\4\2\2\u0120\u0121\t\7\2\2\u0121\u0122\t\16\2\2\u0122`\3\2\2\2\u0123"+
		"\u0124\t\t\2\2\u0124\u0125\t\4\2\2\u0125\u0126\t\5\2\2\u0126\u0127\t\f"+
		"\2\2\u0127\u0128\t\3\2\2\u0128b\3\2\2\2\u0129\u012d\t\23\2\2\u012a\u012c"+
		"\t\24\2\2\u012b\u012a\3\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3\2\2\2"+
		"\u012d\u012e\3\2\2\2\u012ed\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0132\5"+
		"%\23\2\u0131\u0130\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133"+
		"\u0135\5k\66\2\u0134\u0133\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0134\3\2"+
		"\2\2\u0136\u0137\3\2\2\2\u0137f\3\2\2\2\u0138\u013a\5%\23\2\u0139\u0138"+
		"\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013c\3\2\2\2\u013b\u013d\5k\66\2\u013c"+
		"\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2"+
		"\2\2\u013f\u0140\3\2\2\2\u0140\u0144\7\60\2\2\u0141\u0143\5k\66\2\u0142"+
		"\u0141\3\2\2\2\u0143\u0146\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2"+
		"\2\2\u0145\u0151\3\2\2\2\u0146\u0144\3\2\2\2\u0147\u0149\5%\23\2\u0148"+
		"\u0147\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u014c\7\60"+
		"\2\2\u014b\u014d\5k\66\2\u014c\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e"+
		"\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0151\3\2\2\2\u0150\u0139\3\2"+
		"\2\2\u0150\u0148\3\2\2\2\u0151h\3\2\2\2\u0152\u0154\7/\2\2\u0153\u0152"+
		"\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0169\3\2\2\2\u0155\u0157\7\60\2\2"+
		"\u0156\u0158\5k\66\2\u0157\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u0157"+
		"\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u016a\3\2\2\2\u015b\u015d\5k\66\2\u015c"+
		"\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u015c\3\2\2\2\u015e\u015f\3\2"+
		"\2\2\u015f\u0167\3\2\2\2\u0160\u0164\7\60\2\2\u0161\u0163\5k\66\2\u0162"+
		"\u0161\3\2\2\2\u0163\u0166\3\2\2\2\u0164\u0162\3\2\2\2\u0164\u0165\3\2"+
		"\2\2\u0165\u0168\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0160\3\2\2\2\u0167"+
		"\u0168\3\2\2\2\u0168\u016a\3\2\2\2\u0169\u0155\3\2\2\2\u0169\u015c\3\2"+
		"\2\2\u016aj\3\2\2\2\u016b\u016c\t\25\2\2\u016cl\3\2\2\2\u016d\u0173\7"+
		"$\2\2\u016e\u016f\7^\2\2\u016f\u0172\7$\2\2\u0170\u0172\13\2\2\2\u0171"+
		"\u016e\3\2\2\2\u0171\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0174\3\2"+
		"\2\2\u0173\u0171\3\2\2\2\u0174\u0176\3\2\2\2\u0175\u0173\3\2\2\2\u0176"+
		"\u0177\7$\2\2\u0177n\3\2\2\2\u0178\u0179\t\26\2\2\u0179p\3\2\2\2\u017a"+
		"\u017b\7\61\2\2\u017b\u017c\7,\2\2\u017c\u0180\3\2\2\2\u017d\u017f\13"+
		"\2\2\2\u017e\u017d\3\2\2\2\u017f\u0182\3\2\2\2\u0180\u0181\3\2\2\2\u0180"+
		"\u017e\3\2\2\2\u0181\u0183\3\2\2\2\u0182\u0180\3\2\2\2\u0183\u0184\7,"+
		"\2\2\u0184\u0185\7\61\2\2\u0185\u0186\3\2\2\2\u0186\u0187\b9\2\2\u0187"+
		"r\3\2\2\2\u0188\u0189\7\61\2\2\u0189\u018a\7\61\2\2\u018a\u018e\3\2\2"+
		"\2\u018b\u018d\13\2\2\2\u018c\u018b\3\2\2\2\u018d\u0190\3\2\2\2\u018e"+
		"\u018f\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0192\3\2\2\2\u0190\u018e\3\2"+
		"\2\2\u0191\u0193\7\17\2\2\u0192\u0191\3\2\2\2\u0192\u0193\3\2\2\2\u0193"+
		"\u0194\3\2\2\2\u0194\u0195\7\f\2\2\u0195\u0196\3\2\2\2\u0196\u0197\b:"+
		"\3\2\u0197t\3\2\2\2\u0198\u019a\t\27\2\2\u0199\u0198\3\2\2\2\u019a\u019b"+
		"\3\2\2\2\u019b\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019d\3\2\2\2\u019d"+
		"\u019e\b;\4\2\u019ev\3\2\2\2\30\2\u012d\u0131\u0136\u0139\u013e\u0144"+
		"\u0148\u014e\u0150\u0153\u0159\u015e\u0164\u0167\u0169\u0171\u0173\u0180"+
		"\u018e\u0192\u019b";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}