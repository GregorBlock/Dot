// Generated from C:\Users\Gregor Block\Studium\git\Dot\Dot\src/de/compilerbau/dot/DOT.g4 by ANTLR 4.1
    
package de.compilerbau.dot;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DOTLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__33=1, T__32=2, T__31=3, T__30=4, T__29=5, T__28=6, T__27=7, T__26=8, 
		T__25=9, T__24=10, T__23=11, T__22=12, T__21=13, T__20=14, T__19=15, T__18=16, 
		T__17=17, T__16=18, T__15=19, T__14=20, T__13=21, T__12=22, T__11=23, 
		T__10=24, T__9=25, T__8=26, T__7=27, T__6=28, T__5=29, T__4=30, T__3=31, 
		T__2=32, T__1=33, T__0=34, STRICT=35, GRAPH=36, DIGRAPH=37, NODE=38, EDGE=39, 
		SUBGRAPH=40, UNCOVER=41, ONLY=42, NUMBER=43, STRING=44, ID=45, COMMENT=46, 
		LINE_COMMENT=47, PREPROC=48, WS=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'long'", "'short'", "']'", "','", "'while'", "'-'", "'['", "':'", "'('", 
		"'if'", "'int'", "'--'", "'<'", "'!='", "'{'", "'double'", "'else'", "'boolean'", 
		"'}'", "'float'", "'++'", "'char'", "'do'", "'->'", "'byte'", "')'", "'for'", 
		"'='", "'String'", "';'", "'&&'", "'||'", "'>'", "'=='", "STRICT", "GRAPH", 
		"DIGRAPH", "NODE", "EDGE", "SUBGRAPH", "UNCOVER", "ONLY", "NUMBER", "STRING", 
		"ID", "COMMENT", "LINE_COMMENT", "PREPROC", "WS"
	};
	public static final String[] ruleNames = {
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "STRICT", "GRAPH", "DIGRAPH", "NODE", "EDGE", "SUBGRAPH", "UNCOVER", 
		"ONLY", "NUMBER", "DIGIT", "STRING", "ID", "LETTER", "COMMENT", "LINE_COMMENT", 
		"PREPROC", "WS"
	};


	public DOTLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DOT.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 47: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 48: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 49: PREPROC_action((RuleContext)_localctx, actionIndex); break;

		case 50: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void PREPROC_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\63\u0177\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3"+
		"\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3#\3$\3"+
		"$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'"+
		"\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3"+
		"*\3*\3+\3+\3+\3+\3+\3,\5,\u0119\n,\3,\3,\6,\u011d\n,\r,\16,\u011e\3,\6"+
		",\u0122\n,\r,\16,\u0123\3,\3,\7,\u0128\n,\f,\16,\u012b\13,\5,\u012d\n"+
		",\5,\u012f\n,\3-\3-\3.\3.\3.\3.\7.\u0137\n.\f.\16.\u013a\13.\3.\3.\3/"+
		"\3/\3/\7/\u0141\n/\f/\16/\u0144\13/\3\60\3\60\3\61\3\61\3\61\3\61\7\61"+
		"\u014c\n\61\f\61\16\61\u014f\13\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62"+
		"\3\62\3\62\7\62\u015a\n\62\f\62\16\62\u015d\13\62\3\62\5\62\u0160\n\62"+
		"\3\62\3\62\3\62\3\62\3\63\3\63\7\63\u0168\n\63\f\63\16\63\u016b\13\63"+
		"\3\63\3\63\3\63\3\63\3\64\6\64\u0172\n\64\r\64\16\64\u0173\3\64\3\64\6"+
		"\u0138\u014d\u015b\u0169\65\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t"+
		"\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1"+
		"#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67"+
		"\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,"+
		"\1W-\1Y\2\1[.\1]/\1_\2\1a\60\2c\61\3e\62\4g\63\5\3\2\27\4\2UUuu\4\2VV"+
		"vv\4\2TTtt\4\2KKkk\4\2EEee\4\2IIii\4\2CCcc\4\2RRrr\4\2JJjj\4\2FFff\4\2"+
		"PPpp\4\2QQqq\4\2GGgg\4\2WWww\4\2DDdd\4\2XXxx\4\2NNnn\4\2[[{{\3\2\62;\6"+
		"\2C\\aac|\u0082\u0101\5\2\13\f\17\17\"\"\u0183\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2["+
		"\3\2\2\2\2]\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2"+
		"\2\2\5n\3\2\2\2\7t\3\2\2\2\tv\3\2\2\2\13x\3\2\2\2\r~\3\2\2\2\17\u0080"+
		"\3\2\2\2\21\u0082\3\2\2\2\23\u0084\3\2\2\2\25\u0086\3\2\2\2\27\u0089\3"+
		"\2\2\2\31\u008d\3\2\2\2\33\u0090\3\2\2\2\35\u0092\3\2\2\2\37\u0095\3\2"+
		"\2\2!\u0097\3\2\2\2#\u009e\3\2\2\2%\u00a3\3\2\2\2\'\u00ab\3\2\2\2)\u00ad"+
		"\3\2\2\2+\u00b3\3\2\2\2-\u00b6\3\2\2\2/\u00bb\3\2\2\2\61\u00be\3\2\2\2"+
		"\63\u00c1\3\2\2\2\65\u00c6\3\2\2\2\67\u00c8\3\2\2\29\u00cc\3\2\2\2;\u00ce"+
		"\3\2\2\2=\u00d5\3\2\2\2?\u00d7\3\2\2\2A\u00da\3\2\2\2C\u00dd\3\2\2\2E"+
		"\u00df\3\2\2\2G\u00e2\3\2\2\2I\u00e9\3\2\2\2K\u00ef\3\2\2\2M\u00f7\3\2"+
		"\2\2O\u00fc\3\2\2\2Q\u0101\3\2\2\2S\u010a\3\2\2\2U\u0112\3\2\2\2W\u0118"+
		"\3\2\2\2Y\u0130\3\2\2\2[\u0132\3\2\2\2]\u013d\3\2\2\2_\u0145\3\2\2\2a"+
		"\u0147\3\2\2\2c\u0155\3\2\2\2e\u0165\3\2\2\2g\u0171\3\2\2\2ij\7n\2\2j"+
		"k\7q\2\2kl\7p\2\2lm\7i\2\2m\4\3\2\2\2no\7u\2\2op\7j\2\2pq\7q\2\2qr\7t"+
		"\2\2rs\7v\2\2s\6\3\2\2\2tu\7_\2\2u\b\3\2\2\2vw\7.\2\2w\n\3\2\2\2xy\7y"+
		"\2\2yz\7j\2\2z{\7k\2\2{|\7n\2\2|}\7g\2\2}\f\3\2\2\2~\177\7/\2\2\177\16"+
		"\3\2\2\2\u0080\u0081\7]\2\2\u0081\20\3\2\2\2\u0082\u0083\7<\2\2\u0083"+
		"\22\3\2\2\2\u0084\u0085\7*\2\2\u0085\24\3\2\2\2\u0086\u0087\7k\2\2\u0087"+
		"\u0088\7h\2\2\u0088\26\3\2\2\2\u0089\u008a\7k\2\2\u008a\u008b\7p\2\2\u008b"+
		"\u008c\7v\2\2\u008c\30\3\2\2\2\u008d\u008e\7/\2\2\u008e\u008f\7/\2\2\u008f"+
		"\32\3\2\2\2\u0090\u0091\7>\2\2\u0091\34\3\2\2\2\u0092\u0093\7#\2\2\u0093"+
		"\u0094\7?\2\2\u0094\36\3\2\2\2\u0095\u0096\7}\2\2\u0096 \3\2\2\2\u0097"+
		"\u0098\7f\2\2\u0098\u0099\7q\2\2\u0099\u009a\7w\2\2\u009a\u009b\7d\2\2"+
		"\u009b\u009c\7n\2\2\u009c\u009d\7g\2\2\u009d\"\3\2\2\2\u009e\u009f\7g"+
		"\2\2\u009f\u00a0\7n\2\2\u00a0\u00a1\7u\2\2\u00a1\u00a2\7g\2\2\u00a2$\3"+
		"\2\2\2\u00a3\u00a4\7d\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7q\2\2\u00a6"+
		"\u00a7\7n\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7p\2\2"+
		"\u00aa&\3\2\2\2\u00ab\u00ac\7\177\2\2\u00ac(\3\2\2\2\u00ad\u00ae\7h\2"+
		"\2\u00ae\u00af\7n\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2"+
		"\7v\2\2\u00b2*\3\2\2\2\u00b3\u00b4\7-\2\2\u00b4\u00b5\7-\2\2\u00b5,\3"+
		"\2\2\2\u00b6\u00b7\7e\2\2\u00b7\u00b8\7j\2\2\u00b8\u00b9\7c\2\2\u00b9"+
		"\u00ba\7t\2\2\u00ba.\3\2\2\2\u00bb\u00bc\7f\2\2\u00bc\u00bd\7q\2\2\u00bd"+
		"\60\3\2\2\2\u00be\u00bf\7/\2\2\u00bf\u00c0\7@\2\2\u00c0\62\3\2\2\2\u00c1"+
		"\u00c2\7d\2\2\u00c2\u00c3\7{\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7g\2\2"+
		"\u00c5\64\3\2\2\2\u00c6\u00c7\7+\2\2\u00c7\66\3\2\2\2\u00c8\u00c9\7h\2"+
		"\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7t\2\2\u00cb8\3\2\2\2\u00cc\u00cd\7"+
		"?\2\2\u00cd:\3\2\2\2\u00ce\u00cf\7U\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1"+
		"\7t\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7i\2\2\u00d4"+
		"<\3\2\2\2\u00d5\u00d6\7=\2\2\u00d6>\3\2\2\2\u00d7\u00d8\7(\2\2\u00d8\u00d9"+
		"\7(\2\2\u00d9@\3\2\2\2\u00da\u00db\7~\2\2\u00db\u00dc\7~\2\2\u00dcB\3"+
		"\2\2\2\u00dd\u00de\7@\2\2\u00deD\3\2\2\2\u00df\u00e0\7?\2\2\u00e0\u00e1"+
		"\7?\2\2\u00e1F\3\2\2\2\u00e2\u00e3\t\2\2\2\u00e3\u00e4\t\3\2\2\u00e4\u00e5"+
		"\t\4\2\2\u00e5\u00e6\t\5\2\2\u00e6\u00e7\t\6\2\2\u00e7\u00e8\t\3\2\2\u00e8"+
		"H\3\2\2\2\u00e9\u00ea\t\7\2\2\u00ea\u00eb\t\4\2\2\u00eb\u00ec\t\b\2\2"+
		"\u00ec\u00ed\t\t\2\2\u00ed\u00ee\t\n\2\2\u00eeJ\3\2\2\2\u00ef\u00f0\t"+
		"\13\2\2\u00f0\u00f1\t\5\2\2\u00f1\u00f2\t\7\2\2\u00f2\u00f3\t\4\2\2\u00f3"+
		"\u00f4\t\b\2\2\u00f4\u00f5\t\t\2\2\u00f5\u00f6\t\n\2\2\u00f6L\3\2\2\2"+
		"\u00f7\u00f8\t\f\2\2\u00f8\u00f9\t\r\2\2\u00f9\u00fa\t\13\2\2\u00fa\u00fb"+
		"\t\16\2\2\u00fbN\3\2\2\2\u00fc\u00fd\t\16\2\2\u00fd\u00fe\t\13\2\2\u00fe"+
		"\u00ff\t\7\2\2\u00ff\u0100\t\16\2\2\u0100P\3\2\2\2\u0101\u0102\t\2\2\2"+
		"\u0102\u0103\t\17\2\2\u0103\u0104\t\20\2\2\u0104\u0105\t\7\2\2\u0105\u0106"+
		"\t\4\2\2\u0106\u0107\t\b\2\2\u0107\u0108\t\t\2\2\u0108\u0109\t\n\2\2\u0109"+
		"R\3\2\2\2\u010a\u010b\t\17\2\2\u010b\u010c\t\f\2\2\u010c\u010d\t\6\2\2"+
		"\u010d\u010e\t\r\2\2\u010e\u010f\t\21\2\2\u010f\u0110\t\16\2\2\u0110\u0111"+
		"\t\4\2\2\u0111T\3\2\2\2\u0112\u0113\t\r\2\2\u0113\u0114\t\f\2\2\u0114"+
		"\u0115\t\22\2\2\u0115\u0116\t\23\2\2\u0116V\3\2\2\2\u0117\u0119\7/\2\2"+
		"\u0118\u0117\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u012e\3\2\2\2\u011a\u011c"+
		"\7\60\2\2\u011b\u011d\5Y-\2\u011c\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e"+
		"\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u012f\3\2\2\2\u0120\u0122\5Y"+
		"-\2\u0121\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0121\3\2\2\2\u0123"+
		"\u0124\3\2\2\2\u0124\u012c\3\2\2\2\u0125\u0129\7\60\2\2\u0126\u0128\5"+
		"Y-\2\u0127\u0126\3\2\2\2\u0128\u012b\3\2\2\2\u0129\u0127\3\2\2\2\u0129"+
		"\u012a\3\2\2\2\u012a\u012d\3\2\2\2\u012b\u0129\3\2\2\2\u012c\u0125\3\2"+
		"\2\2\u012c\u012d\3\2\2\2\u012d\u012f\3\2\2\2\u012e\u011a\3\2\2\2\u012e"+
		"\u0121\3\2\2\2\u012fX\3\2\2\2\u0130\u0131\t\24\2\2\u0131Z\3\2\2\2\u0132"+
		"\u0138\7$\2\2\u0133\u0134\7^\2\2\u0134\u0137\7$\2\2\u0135\u0137\13\2\2"+
		"\2\u0136\u0133\3\2\2\2\u0136\u0135\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0139"+
		"\3\2\2\2\u0138\u0136\3\2\2\2\u0139\u013b\3\2\2\2\u013a\u0138\3\2\2\2\u013b"+
		"\u013c\7$\2\2\u013c\\\3\2\2\2\u013d\u0142\5_\60\2\u013e\u0141\5_\60\2"+
		"\u013f\u0141\5Y-\2\u0140\u013e\3\2\2\2\u0140\u013f\3\2\2\2\u0141\u0144"+
		"\3\2\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143^\3\2\2\2\u0144"+
		"\u0142\3\2\2\2\u0145\u0146\t\25\2\2\u0146`\3\2\2\2\u0147\u0148\7\61\2"+
		"\2\u0148\u0149\7,\2\2\u0149\u014d\3\2\2\2\u014a\u014c\13\2\2\2\u014b\u014a"+
		"\3\2\2\2\u014c\u014f\3\2\2\2\u014d\u014e\3\2\2\2\u014d\u014b\3\2\2\2\u014e"+
		"\u0150\3\2\2\2\u014f\u014d\3\2\2\2\u0150\u0151\7,\2\2\u0151\u0152\7\61"+
		"\2\2\u0152\u0153\3\2\2\2\u0153\u0154\b\61\2\2\u0154b\3\2\2\2\u0155\u0156"+
		"\7\61\2\2\u0156\u0157\7\61\2\2\u0157\u015b\3\2\2\2\u0158\u015a\13\2\2"+
		"\2\u0159\u0158\3\2\2\2\u015a\u015d\3\2\2\2\u015b\u015c\3\2\2\2\u015b\u0159"+
		"\3\2\2\2\u015c\u015f\3\2\2\2\u015d\u015b\3\2\2\2\u015e\u0160\7\17\2\2"+
		"\u015f\u015e\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0162"+
		"\7\f\2\2\u0162\u0163\3\2\2\2\u0163\u0164\b\62\3\2\u0164d\3\2\2\2\u0165"+
		"\u0169\7%\2\2\u0166\u0168\13\2\2\2\u0167\u0166\3\2\2\2\u0168\u016b\3\2"+
		"\2\2\u0169\u016a\3\2\2\2\u0169\u0167\3\2\2\2\u016a\u016c\3\2\2\2\u016b"+
		"\u0169\3\2\2\2\u016c\u016d\7\f\2\2\u016d\u016e\3\2\2\2\u016e\u016f\b\63"+
		"\4\2\u016ff\3\2\2\2\u0170\u0172\t\26\2\2\u0171\u0170\3\2\2\2\u0172\u0173"+
		"\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0175\3\2\2\2\u0175"+
		"\u0176\b\64\5\2\u0176h\3\2\2\2\22\2\u0118\u011e\u0123\u0129\u012c\u012e"+
		"\u0136\u0138\u0140\u0142\u014d\u015b\u015f\u0169\u0173";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}